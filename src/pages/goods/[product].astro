---
import Layout from "../../layouts/Layout.astro";
import goods from "../../data/goods.json";

export const getStaticPaths = async () => {
  return goods.map(({ url }) => ({
    params: { product: url.split("/").pop() },
  }));
};

const { product } = Astro.params;
const goodsData = goods.find((item) => item.url.split("/").pop() === product);

if (!goodsData) {
  throw new Error("商品が見つかりません");
}
---

<Layout>
  <style lang="scss">
    .product {
      padding-top: 130px;
      width: 90%;
      margin-left: auto;
      margin-right: auto;
      display: flex;
      justify-content: space-between;

      &-detail {
        margin-top: 80px;
        width: 70%;
        margin-left: auto;
        margin-right: auto;
        max-width: 1000px;
        p {
          padding-bottom: 10px;
          font-size: 20px;
        }
        h3 {
          font-size: 30px;
          padding-bottom: 20px;
        }
      }
      @media (max-width: 640px) {
        &-detail {
          width: 90%;
          margin-top: 0px;
        }
      }
    }
    @media (max-width: 640px) {
      .product {
        display: block;
      }
    }

    .img-switcher {
      max-width: 1000px;
      margin: 20px auto;
    }
    .main-img {
      width: 90%;
      aspect-ratio: 3/2;
      object-fit: cover;
      margin-left: auto;
      margin-right: auto;
      border-radius: 20px;
      border: 1px solid #000;
    }
    .thumbnails {
      width: 90%;
      margin-left: auto;
      margin-right: auto;
      max-width: 1000px;
      display: flex;
      gap: 4%;
      margin-top: 4%;
    }
    .thumb-btn {
      width: 22%;
      border: none;
      background: none;
      padding: 0;
      cursor: pointer;
    }
    .thumb-img {
      width: 100%;
      aspect-ratio: 1;
      object-fit: cover;
      border-radius: 20px;
      border: 1px solid #000;
    }
    @media (max-width: 500px) {
      .thumb-img {
        border-radius: 15px;
      }
    }
    .active {
      opacity: 0.5;
    }
    .sold {
      font-size: 18px;
      font-weight: bold;
    }

    .available {
      color: blue;
    }

    .out-of-stock {
      color: red;
    }
  </style>
  <body>
    <div class="product">
      <div class="img-switcher">
        <img
          id="mainImg"
          class="main-img"
          src={`/14_ecsite/images/${goodsData.itemphotos[0]}`}
          alt={goodsData.name}
        />
        <div class="thumbnails">
          <button class="thumb-btn active">
            <img
              class="thumb-img"
              src={`/14_ecsite/images/${goodsData.itemphotos[0]}`}
              alt={goodsData.name}
            />
          </button>
          <button class="thumb-btn">
            <img
              class="thumb-img"
              src={`/14_ecsite/images/${goodsData.itemphotos[1]}`}
              alt={goodsData.name}
            />
          </button>
          <button class="thumb-btn"
            ><img
              class="thumb-img"
              src={`/14_ecsite/images/${goodsData.itemphotos[0]}`}
              alt={goodsData.name}
            /></button
          >
          <button class="thumb-btn"
            ><img
              class="thumb-img"
              src={`/14_ecsite/images/${goodsData.itemphotos[1]}`}
              alt={goodsData.name}
            /></button
          >
        </div>
      </div>
      <div class="product-detail">
        <h3>{goodsData.name}</h3>
        <p>{goodsData.text}</p>
        <p>{goodsData.price}円</p>
        <p id="soldStatus" class="sold" data-state={goodsData.state}>
          {goodsData.state}
        </p>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const mainImg = document.getElementById("mainImg");
        const thumbBtns = document.querySelectorAll(".thumb-btn");

        thumbBtns.forEach((btn) => {
          btn.addEventListener("click", function () {
            const img = this.querySelector("img");
            mainImg.src = img.src;
            mainImg.alt = img.alt;

            thumbBtns.forEach((btn) => btn.classList.remove("active"));
            this.classList.add("active");
          });
        });
      });
      document.addEventListener("DOMContentLoaded", () => {
        const soldStatus = document.getElementById("soldStatus");
        const state = soldStatus.getAttribute("data-state");

        if (state === "在庫あり") {
          soldStatus.classList.add("available");
        } else if (state === "在庫なし") {
          soldStatus.classList.add("out-of-stock");
        }
      });
    </script>
  </body>
</Layout>
